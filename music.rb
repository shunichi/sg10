# メロディ
seq=[-99,8,-99,4,-9,2,-4,2,0,4,-2,4,-4,4,-4,2,-2,2,-4,2,-4,2,-4,2,-7,2,-9,4,-9,2,-9,2,-4,2,-4,2,-4,2,0,2,3,4,0,4,-2,2,-2,2,0,2,-4,2,3,1,-2,3,-9,2,-4,2,0,2,0,2,0,2,-2,2,-4,4,-4,2,-4,2,1,2,1,2,1,2,3,2,4,4,4,2,4,2,3,2,3,2,0,2,3,2,1,2,1,2,0,2,-2,2,-4,12,-16,1.3333333333333333,-21,1.3333333333333333,-16,1.3333333333333333,-12,2,-12,2,-12,2,-14,2,-16,2,-21,2,-16,2,-12,2,-11,2,-11,2,-11,2,-9,2,-8,4,-6,4,-9,2,-99,2,-99,2,-99,2,-11,2,-99,2,-9,2,-4,2,0,2,-99,2,-2,4,-4,2,-99,2,-9,2,-4,2,0,2,-99,2,-2,4,-4,2,-99,2,-9,2,-4,2,0,2,-99,2,-2,4,-4,2,-99,2,-9,2,-4,2,0,2,-99,2,-2,4,-4,2,-99,2,-9,2,-4,2,0,2,-99,1,-2,1,-99,1,-9,1,-4,1,-99,1,0,2,-99,1,-2,1,-99,1,-9,1,-4,1,-99,1,0,2,-99,1,-2,1,-99,1,-9,1,-4,1,-99,1,0,2,-99,1,-2,1,-99,1,-9,1,-4,1,-99,1,0,1,-99,1,0,1,-99,1,0,1,-99,1,0,1,-99,1,0,1,0,1,0,1,0,1,0,1,0,1,0,2,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-16,1,-16,1,-9,2,-99,1,-16,1,-99,1,-99,1,-16,1,-99,1,-99,4,-16,2,-99,1,-99,1,-4,2,-16,1,-99,1,-16,3,-99,1,-99,4,-4,3,-99,1,-6,1,-4,1,-99,1,-2,1,-99,1,-99,1,1,4,0,1,-99,1,-2,1,-99,1,-4,1,-99,1,0,3,-99,1,-2,3,-6,1,-99,4,-4,3,-99,1,-6,1,-4,1,-99,1,-2,1,-99,1,-99,1,1,4,0,1,-99,1,-2,1,-99,1,-4,1,-99,1,3,2,-99,2,3,2,-99,2,-99,4,-4,3,-99,1,-6,1,-4,1,-99,1,-2,1,-99,1,-99,1,1,4,0,1,-99,1,-2,1,-99,1,-4,1,-99,1,0,3,-99,1,-2,3,-4,1,-99,1,-6,1,-4,9,-99,1,-6,1,-4,1,-6,1,-2,3,-4,1,-99,1,-6,1,-99,1,-4,1,1,3,-4,1,-99,1,1,1,-99,1,3,2,3,1,0,1,0,1,0,1,0,1,-2,1,-4,1,3,2,0,1,0,1,0,1,0,1,-2,1,-4,1,1,2,0,1,1,1,0,1,-2,2,-2,1,1,2,0,1,1,1,0,1,1,1,0,1,-2,2,-4,1,-4,1,-4,1,-4,1,-4,2,-2,1,-4,1,-4,1,-4,1,3,1,0,2,-4,1,3,1,0,1,-99,1,-4,1,-2,1,-4,1,-2,1,-99,1,-2,1,-99,1,0,1,-99,1,-2,1,0,1,-99,1,1,1,-99,1,5,1,-99,1,0,1,0,1,0,1,-2,1,-2,1,-4,1,3,1,-99,1,0,1,0,1,0,1,-2,1,-2,1,-4,1,-2,1,-99,1,-2,1,0,1,-2,1,0,1,-99,1,0,1,0,1,1,1,-99,1,1,1,1,1,5,1,-2,1,-99,1,-99,1,0,1,-2,1,-4,1,-7,1,-4,1,-4,1,-99,1,0,2,-2,1,-4,1,-7,1,-4,1,-4,2,-99,1,-99,1,-2,1,-2,1,-2,1,0,1,0,1,0,1,0,1,1,2,1,2,1,2,1,2,-4,2,-6,1,-4,2,-6,1,-4,3,-99,1,-99,1,-99,1,3,1,1,1,-1,1,3,3,1,2,-1,2,-2,2,3,3,1,4,-99,1,-4,2,-6,1,-4,2,-6,1,-4,3,-99,1,-4,1,-6,1,-4,1,-1,1,3,1,1,3,-1,1,-99,1,-4,1,-1,1,3,1,1,3,-1,1,-99,1,3,4,-4,1,-99,1,-4,1,-99,1,-4,2,-99,1,-99,1,-9,1,-7,1,-6,1,-4,1,-99,1,-11,1,-9,1,-6,1,-4,1,-99,1,-9,1,-7,1,-6,1,-4,1,-99,1,-13,1,-9,1,-7,1,-6,1,-99,1,-4,2,-99,1,-99,1,-6,1,-7,2,-7,1,-7,1,-7,2,-9,2,-7,1,-7,1,-7,1,-6,1,-7,1,-7,2,-99,1,-8,1,-8,1,-8,1,-8,1,-8,1,-8,1,-8,1,-6,2,-6,2,-6,2,-99,1,-4,1]
# １オクターブ上げたベース
base_seq=[-99,16,-16,8,-18,8,-23,8,-21,8,-16,8,-12,8,-11,8,-17,8,-16,8,-12,8,-23,8,-13,8,-9,8,-14,8,-12,12,-99,4,-28,8,-24,8,-23,8,-18,8,-21,2,-99,4,-99,2,-14,2,-99,4,-99,2,-28,8,-21,8,-28,8,-21,8,-28,8,-21,8,-16,8,-21,8,-28,3,-21,3,-16,2,-28,3,-21,3,-16,2,-28,3,-21,3,-16,2,-28,3,-21,3,-16,2,-28,3,-16,3,-21,2,-28,3,-21,1,-16,2,-21,2,-28,2,-99,2,-99,4,-99,8,-99,16,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-28,3,-16,1,-99,1,-99,1,-28,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-30,3,-18,1,-99,1,-99,1,-30,1,-99,1,-31,11,-99,1,-31,3,-99,1,-32,3,-20,2,-99,1,-32,1,-99,1,-30,3,-18,2,-99,1,-30,1,-99,1,-28,3,-99,1,-16,4,-28,3,-16,0.5,-99,0.5,-16,2,-28,2,-30,4,-18,4,-30,3,-18,0.5,-99,0.5,-18,2,-30,2,-28,2,-99,1,-33,0.5,-99,0.5,-33,2,-28,1,-99,1,-28,2,-99,1,-33,0.5,-99,0.5,-33,2,-28,2,-30,2,-99,1,-35,0.5,-99,0.5,-35,2,-30,1,-99,1,-30,2,-99,1,-35,0.5,-99,0.5,-35,2,-30,2,-28,4,-16,4,-28,3,-16,1,-16,2,-28,2,-18,2,-99,1,-23,0.5,-99,0.5,-23,2,-18,2,-18,2,-99,1,-23,0.5,-99,0.5,-23,2,-18,2,-19,16,-32,3,-20,3,-32,2,-30,3,-18,3,-30,1,-99,1,-33,2,-30,1,-28,2,-26,3,-28,3,-25,3,-23,3,-22,3,-21,3,-18,3,-17,3,-16,3,-33,2,-30,1,-28,2,-26,3,-28,3,-25,3,-23,3,-22,3,-21,3,-18,3,-30,2,-99,1,-30,2,-99,1,-33,2,-30,1,-28,2,-26,3,-28,3,-25,3,-23,3,-22,3,-21,3,-18,3,-17,3,-16,3,-19,16,-20,8,-18,4,-18,3,-28,2]
# 調整なしのベース
# base_seq=[-99,16,-28,8,-30,8,-35,8,-33,8,-28,8,-24,8,-23,8,-29,8,-28,8,-24,8,-35,8,-25,8,-21,8,-26,8,-24,12,-99,4,-40,8,-36,8,-35,8,-30,8,-33,2,-99,4,-99,2,-26,2,-99,4,-99,2,-40,8,-33,8,-40,8,-33,8,-40,8,-33,8,-28,8,-33,8,-40,3,-33,3,-28,2,-40,3,-33,3,-28,2,-40,3,-33,3,-28,2,-40,3,-33,3,-28,2,-40,3,-28,3,-33,2,-40,3,-33,1,-28,2,-33,2,-40,2,-99,2,-99,4,-99,8,-99,16,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-40,3,-28,1,-99,1,-99,1,-40,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-42,3,-30,1,-99,1,-99,1,-42,1,-99,1,-43,11,-99,1,-43,3,-99,1,-44,3,-32,2,-99,1,-44,1,-99,1,-42,3,-30,2,-99,1,-42,1,-99,1,-40,3,-99,1,-28,4,-40,3,-28,0.5,-99,0.5,-28,2,-40,2,-42,4,-30,4,-42,3,-30,0.5,-99,0.5,-30,2,-42,2,-40,2,-99,1,-45,0.5,-99,0.5,-45,2,-40,1,-99,1,-40,2,-99,1,-45,0.5,-99,0.5,-45,2,-40,2,-42,2,-99,1,-47,0.5,-99,0.5,-47,2,-42,1,-99,1,-42,2,-99,1,-47,0.5,-99,0.5,-47,2,-42,2,-40,4,-28,4,-40,3,-28,1,-28,2,-40,2,-30,2,-99,1,-35,0.5,-99,0.5,-35,2,-30,2,-30,2,-99,1,-35,0.5,-99,0.5,-35,2,-30,2,-31,16,-44,3,-32,3,-44,2,-42,3,-30,3,-42,1,-99,1,-45,2,-42,1,-40,2,-38,3,-40,3,-37,3,-35,3,-34,3,-33,3,-30,3,-29,3,-28,3,-45,2,-42,1,-40,2,-38,3,-40,3,-37,3,-35,3,-34,3,-33,3,-30,3,-42,2,-99,1,-42,2,-99,1,-45,2,-42,1,-40,2,-38,3,-40,3,-37,3,-35,3,-34,3,-33,3,-30,3,-29,3,-28,3,-31,16,-32,8,-30,4,-30,3,-40,2]
drum_seq=[-99,16,-99,16,-99,16,-99,16,-99,16,-99,16,-99,16,-99,16,-99,16,5,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,1,2,-99,1,-99,1,-99,1,-99,1,5,1,5,1,8,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,7,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,6,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,6,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,6,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,6,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,6,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,-99,1,-99,1,-99,4,-99,8,-99,16,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,0,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,10,1,-99,1,0,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,7,1,7,1,7,1,7,1,6,1,6,1,6,1,6,1,5,1,5,1,5,1,5,1,4,1,4,1,4,1,4,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,7,1,-99,1,7,1,-99,1,7,1,-99,1,7,1,-99,1,7,1,7,1,10,1,-99,1,7,1,10,1,-99,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,10,1,-99,1,0,1,-99,1,6,1,-99,1,2,1,-99,1,7,1,7,1,7,1,7,1,6,1,6,1,6,1,6,1,5,1,5,1,5,1,5,1,4,1,-99,1,4,1,10,1]

# require_relative 'mml2data'
# seq = mml2data(open(ARGV.shift))
TRI=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0]
NT=[4,8,16,32,64,96,128,160,202,254,380,508,762,1016,2034,4068]
SR=44100
CF=1789773 # CPU_FREQ
def nn(p,sec,vol) # NESノイズ生成(p:ノイズperiod, sec:ノイズの長さ, vol:音量)
  nd=[] # noise_data
  np=NT[p] # noise_period
  ac=0 # apu_cycle
  ns=1 # noise_shift
  nt=0 # noise_timer
  sc=CF/SR.to_f
  (CF*sec).ceil.times do
    c1=ac
    ac+=1
    c2=ac
    if ac.odd?
      if nt==0
        nt=np
        ns=(((ns&1)^((ns>>1)&1))<<14)|(ns>>1)
      else
        nt-=1
      end
    end
    if (c1/sc).to_i!=(c2/sc).to_i
      nd<<(ns&1==1 ? 0:vol)
    end
  end
  nd
end
def make_ts(s) # s秒をサンプルレートSRで分割
  (0..(SR*s).to_i).map{|t|t.to_f/SR}
end
$noise={}
def nw(p,t) # ノイズサンプル値取得(p:ノイズperiod, t:秒)
  n=($noise[p] ||= nn(p,0.25,1.0))
  n[(t*SR) % n.size]
end
def sw(f,d,t) # 矩形波(パルス波)サンプル値取得(f:周波数, d:デューティー比, t:秒)
  ((f*t)%1)<d ?0:1
end
def tw(f,t) # 三角波サンプル値取得(f:周波数, t:秒)
  TRI[((f*t)%1*32).floor]/15.0
  a=((f*t)%1)*2
  a>=1 ? 2-a : a
end
def sinw(f,t) # 正弦波サンプル値取得(f:周波数, t:秒)
  Math.sin(f*2*Math::PI*t)
end
def adsr(v,s,t) # 音量変化(v:サンプル値, s:音の長さ, t:秒)
  r=t/s
  th=[0.5,s].min
  (r>th)?(1.0-(r-th)/(1.0-th))*v:v
end
def make_wav(seq,type,vol)
  wav = []
  seq.each_slice(2){|sc,l|
    s=2*l/16.0
    f=440*2**(sc/12.0)
    if sc==(-99)
      make_ts(s).each{wav<<0}
    else
      make_ts(s).each{|t|
        v= type==0 ? sw(f,0.5,t) : (type==1 ? tw(f,t) : nw(sc,t))
        v=adsr(v,s,t)
        v=(v*vol).round
        v+=(1<<16) if v<0
        wav<<v
      }
    end
  }
  wav
end

print "Now Loading..."

# メロディ
wav=make_wav(seq,0,10*256)

# メロディを１６分音符分ずらして音量半分にしたのを重ねてリバーブっぽく
pd=[0]*(SR*0.5/4).to_i # 16分音符分無音
p2=wav.map{|a|a*0.5}
p2=pd+p2
wav=wav+pd
wav=wav.zip(p2).map(&:sum)

# ベース
base_wav=make_wav(base_seq,1,60*256)

# ドラム
drum_wav=make_wav(drum_seq,2,8*256)

# 長さをそろえる
max_sz=[wav.size,base_wav.size,drum_wav.size].max
wav+=[0]*(max_sz-wav.size)
base_wav+=[0]*(max_sz-base_wav.size)
drum_wav+=[0]*(max_sz-drum_wav.size)

# メロディ+ベース+ドラム 合成
wav=wav.zip(base_wav, drum_wav).map(&:sum)

# wav = drum_wav
# wav=base_wav

# WAVファイル生成
def wf(d)
  ["RIFF",[36+d.size*2].pack("V"),"WAVE"].join+["fmt ",16,1,1,SR,SR*2,2,16].pack("a*VvvVVvv")+["data",d.size*2].pack("a*V")+d.pack("v*")
end
# IO.write("music.wav",wf(wav))
# IO.write("drum.wav",wf(wav))
# exit

print "\r              \r"

l=[
  [23.1,"慌てん坊は\n"],
  [25.1,"あわてんぼうは\n"],
  [27.1,"あわ展望は\n"],
  [29.1,"OUR展望は\n"],
  [38.3,"OUR展望 is"],
  [40.8," SOCIAL CHANGE!\n"],
  [57.5,"見積もりないし 納品もないし そもそも要件定義すらないし\n"],
  [61.5,"寄り添い見い出すコアバリュー 止まることのない改善と改修\n"],
  [65.5,"変化する時代 マッチする形 アップデートし続けるその価値\n"],
  [69.5,"すべての問題解決に向かえ それが僕らのn2jk\n"],
  [73.5,"Embrace Change - 変化を受け入れて\n"],
  [77.5,"Fearless Change - 恐れずに恐れずにさ\n"],
  [81.5,"Social Change - 変えていく？変えていこう\n"],
  [85.5,"すべての問題解決に向かえ それが僕らのn2jk\n"]
]
require 'tempfile'
c=RUBY_PLATFORM=~/darwin/ ?"afplay":"aplay"
# 一時ファイルとしてWAVを出力
o=Tempfile.open("sg10"){|o|o.write(wf(wav));o}
# 音楽再生コマンドライン文字列生成
p=[c,o.path,">/dev/null","2>&1"].join(' ')
# 別スレッドで歌詞出力開始
Thread.start{s=Time.now;l.each{|t,txt|while(Time.now-s<t);sleep(0.1);end;print(txt);}}
# 音楽再生
system(p)
